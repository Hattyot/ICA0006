- name: check if rsyslog namespace exists
  shell: "rbd namespace ls | grep rsyslog"
  register: rsyslog_namespace
  changed_when: false
  failed_when: false

- name: create rsyslog namespace
  shell:
    cmd: rbd namespace create --namespace rsyslog
  when: rsyslog_namespace.stdout == ""

- name: check if rsyslog user exists
  stat:
    path: "/etc/ceph/ceph.client.rsyslog.keyring"
  register: rsyslog_keyring
  changed_when: false

- name: create user for rsyslog namespace
  shell:
    cmd: ceph auth get-or-create client.rsyslog mon 'profile rbd' osd 'profile rbd pool=rbd namespace=rsyslog' -o /etc/ceph/ceph.client.rsyslog.keyring
  when: not rsyslog_keyring.stat.exists

- name: check if rsyslog-image exists
  shell: "rbd --namespace rsyslog ls"
  register: rsyslog_image
  changed_when: false

- name: create rsyslog rbd image
  shell:
    cmd: "rbd create --namespace rsyslog rsyslog-image --size {{ rsyslog_image_size }}"
  when: rsyslog_image.stdout == ""

- name: get current rsyslog-image size
  shell: rbd --image rsyslog-image --namespace rsyslog info | grep -oP '\tsize\s+\K(\d+\s+\w)' | sed 's/ //g'
  register: current_rsyslog_image_size
  changed_when: false

- name: check if rsyslog is already mapped
  shell: rbd showmapped | grep -oP 'rsyslog-image.*\K(/dev/rbd\d+)'
  changed_when: false
  failed_when: false
  register: rsyslog_mapped

- name: unmap rsyslog image
  shell: "rbd unmap {{ rsyslog_mapped.stdout }}"
  when: "current_rsyslog_image_size.stdout != '{{ rsyslog_image_size }}' and rsyslog_mapped.stdout != ''"

- name: resize rsyslog-image
  shell:
    cmd: "rbd resize --image rsyslog-image --namespace rsyslog --size {{ rsyslog_image_size }} --allow-shrink"
  when: "current_rsyslog_image_size.stdout != '{{ rsyslog_image_size }}'"

- name: map rsyslog image
  shell:
    cmd: rbd map --namespace rsyslog rsyslog-image -n client.rsyslog --keyring=/etc/ceph/ceph.client.rsyslog.keyring
  when: rsyslog_mapped.stdout == ""
  register: rsyslog_map

- name: ensure /var/lib/influxdb exists
  file:
    path: /var/lib/influxdb
    state: directory

- name: make ext4 filesystem on rbd device
  filesystem:
    fstype: ext4
    dev: "{% if rsyslog_mapped.stdout == '' %}{{ rsyslog_map.stdout }}{% else %}{{ rsyslog_mapped.stdout }}{% endif %}"

- name: mount rbd device to /var/lib/influxdb
  ansible.posix.mount:
    path: /var/lib/influxdb
    src: "{% if rsyslog_mapped.stdout == '' %}{{ rsyslog_map.stdout }}{% else %}{{ rsyslog_mapped.stdout }}{% endif %}"
    fstype: ext4
    state: present
  notify:
    - restart influxdb
    - restart telegraf

- name: make influxdb owner of /var/lib/influxdb
  file:
    path: /var/lib/influxdb
    state: directory
    owner: influxdb
    group: influxdb
